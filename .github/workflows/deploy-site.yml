# Sample workflow for building and deploying a Web site to GitHub Pages
#
# To get started with Web see: https://nextjs.org/docs/getting-started
#
name: Deploy Web site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
    tags:
      - "v*"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - uses: pnpm/action-setup@v4
        with:
          package_json_file: "package.json"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: 'pnpm'

      - name: Update data.json with latest version
        run: |
          set -euo pipefail

          VERSION_INFO=$(curl -s --fail --max-time 10 https://release.infinilabs.com/.latest)
          APP_VERSION=$(echo "$VERSION_INFO" | jq -r '.["coco-app"]')
          SERVER_VERSION=$(echo "$VERSION_INFO" | jq -r '.["coco-server"]')
          if ! [[ "$APP_VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+-[0-9]+$ ]] || ! [[ "$SERVER_VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+-[0-9]+$ ]]; then
            echo "Error: Invalid version format." >&2
            exit 1
          fi
          echo "Publish app version: $APP_VERSION, server version: $SERVER_VERSION"
          # Update the JSON file with the new version
          jq --arg app "$APP_VERSION" --arg server "$SERVER_VERSION" '.app = $app | .server = $server' public/data.json > temp.json && mv temp.json public/data.json
          cat public/data.json
          
      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          # Automatically inject basePath in your Web configuration file and disable
          # server side image optimization (https://nextjs.org/docs/api-reference/next/image#unoptimized).
          #
          # You may remove this line if you want to manage the configuration yourself.
          static_site_generator: next

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock', '**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock', '**/pnpm-lock.yaml') }}

      - name: Install dependencies
        run: pnpm install --registry=https://registry.npmjs.org --quiet

      - name: Build with Web
        env:
          NODE_ENV: production
        run: pnpm build

      - name: Add CNAME file
        run: echo "coco.rs" > ./docs/CNAME

      - name: Disable Jekyll
        run: touch docs/.nojekyll

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
